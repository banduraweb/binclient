{"version":3,"sources":["hooks/http.js","context/AuthContext.js","components/Preloader.js","components/ShowHistory.js","components/RecipeList.js","pages/Recipes.js","pages/CreateRecipe.js","pages/OneRecipe.js","pages/Auth.js","components/Header.js","App.js","hooks/authorization.js","hooks/routes.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","AuthContext","createContext","token","userId","login","logout","isAuth","Preloader","Segment","style","position","width","height","Dimmer","active","Loader","size","ShowHistory","historyRecipe","visibleHistory","setVisibleHistory","Button","backgroundColor","onClick","floated","length","map","un_id","title","calories","ingredients","preparation","Message","key","border","boxShadow","Header","className","List","Item","Icon","name","RecipeList","recipes","history","useHistory","renderData","setRenderData","useEffect","useContext","deleteRecipe","id","Authorization","filter","el","_id","Grid","Row","__history","Column","margin","padding","Content","verticalAlign","Description","Extra","push","Recipes","setRecipes","loadedRecipes","CreateRecipe","auth","formData","setFormData","handlerChange","event","target","value","handleConfirm","Form","Group","widths","Field","control","Input","label","placeholder","onChange","type","TextArea","content","OneRecipe","useParams","fetchForUpdate","Auth","email","password","isRegistered","setRegistered","handleRegister","handleLogin","console","log","textAlign","maxWidth","as","color","Image","src","stacked","fluid","icon","iconPosition","onFocus","includes","pointing","disabled","background","Menu","header","alt","to","href","e","preventDefault","App","setToken","authFinished","setAuthFinished","setUserId","jwt","localStorage","setItem","removeItem","parse","getItem","useAuthorization","isAuthUser","Boolean","routes","path","exact","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.490a526b.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const request = useCallback(\n        async (url, method = \"GET\", body = null, headers = {}) => {\n            setLoading(true);\n            try {\n                if (body) {\n                    body = JSON.stringify(body);\n                    headers[\"Content-Type\"] = \"application/json\";\n                }\n\n                const response = await fetch(url, { method, body, headers });\n                const data = await response.json();\n\n                if (!response.ok) {\n                    throw new Error(data.message || \"Error fetching\");\n                }\n                setLoading(false);\n                return data;\n            } catch (e) {\n                setLoading(false);\n                setError(e.message);\n                throw e;\n            }\n        },\n        []\n    );\n\n    const clearError = useCallback(() => setError(null), []);\n    //{setError(null);};\n\n    return {\n        loading,\n        request,\n        error,\n        clearError\n    };\n};\n","import {createContext} from 'react';\n\nexport const AuthContext = createContext({\n\n    token: null,\n    userId: null,\n    login: ()=>{},\n    logout: ()=>{},\n    isAuth: false\n\n});","import React from \"react\";\nimport { Dimmer, Loader, Segment } from \"semantic-ui-react\";\n\nexport const Preloader = () => (\n    <div>\n        <Segment style={{ position: \"absolute\", width: \"100vw\", height: \"100vh\" }}>\n            <Dimmer active>\n                <Loader size=\"massive\">Loading</Loader>\n            </Dimmer>\n        </Segment>\n    </div>\n);\n","import React, { useState } from \"react\";\nimport { Button, Icon, Message } from \"semantic-ui-react\";\n\nexport const ShowHistory = ({ historyRecipe }) => {\n    const [visibleHistory, setVisibleHistory] = useState([]);\n\n    return (\n        <div>\n            <Button\n                style={{ backgroundColor: \"#b0d3bf\" }}\n                onClick={() => setVisibleHistory(historyRecipe)}\n                floated=\"right\"\n            >\n                See prev versions\n            </Button>\n            {visibleHistory.length > 0 &&\n            visibleHistory.map(\n                ({ un_id, title, calories, ingredients, preparation }) => (\n                    <Message\n                        key={un_id}\n                        style={{\n                            border: \"1px solid #f3f3f3\",\n                            boxShadow: \"0 0 8px 0 #e0e0e0\",\n                            backgroundColor: \"#FFCC66\"\n                        }}\n                    >\n                        <Message.Header>\n                            <i className=\"fas fa-utensil-spoon\">Recipe</i>&emsp; {title}\n                            <br />\n                            <i className=\"fas fa-hamburger\">calories</i> &emsp;{calories}\n                        </Message.Header>\n                        <Message.List>\n                            <Message.Item>\n                                <Icon name=\"food\" />\n                                Ingredients: &emsp;{ingredients}\n                            </Message.Item>\n                            <Message.Item>\n                                <Icon name=\"american sign language interpreting\" />\n                                Preparation: &emsp; {preparation}\n                            </Message.Item>\n                        </Message.List>\n                    </Message>\n                )\n            )}\n\n            {visibleHistory.length > 0 && (\n                <Button\n                    style={{ backgroundColor: \"#b0d3bf\" }}\n                    onClick={() => {\n                        setVisibleHistory([]);\n                    }}\n                    floated=\"right\"\n                >\n                    Close previous version\n                </Button>\n            )}\n        </div>\n    );\n};\n","import React, { useContext, useState, useCallback, useEffect } from \"react\";\nimport { Button, Item, Grid, Icon } from \"semantic-ui-react\";\nimport { useHttp } from \"../hooks/http\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { Preloader } from \"./Preloader\";\nimport { ShowHistory } from \"./ShowHistory\";\n\nexport const RecipeList = ({ recipes }) => {\n    const history = useHistory();\n\n    const [renderData, setRenderData] = useState(recipes);\n    useEffect(() => {\n        setRenderData(recipes);\n    }, [recipes]);\n\n    const { loading, request } = useHttp();\n    const { token } = useContext(AuthContext);\n\n    const deleteRecipe = useCallback(\n        async id => {\n            try {\n                const data = await request(\n                    `https://infinite-springs-97858.herokuapp.com/recipe/delete${id}`,\n                    \"DELETE\",\n                    null,\n                    {\n                        Authorization: `Bearer ${token}`\n                    }\n                );\n\n                if (data) {\n                    setRenderData(renderData.filter(el => el._id !== id));\n                }\n            } catch (e) {}\n        },\n        [token, request, renderData]\n    );\n\n    if (loading) {\n        return <Preloader />;\n    }\n\n\n    return (\n        <Grid className=\"container\">\n            <Grid.Row>\n                {renderData.map(\n                    ({ __history, _id, title, calories, ingredients, preparation }) => (\n                        <Grid.Column\n                            width={16}\n                            key={_id}\n                            style={{\n                                border: \"1px solid #f3f3f3\",\n                                boxShadow: \"0 0 8px 0 #e0e0e0\",\n                                margin: \"10px 0\",\n                                backgroundColor: \"#FFFFCC\",\n                                padding: \"10px\"\n                            }}\n                        >\n                            <Item>\n                                <Item.Content verticalAlign=\"middle\">\n                                    <Item.Header>\n                                        <i className=\"fas fa-utensil-spoon\">Recipe</i>&emsp;{title}\n                                        <br />\n                                        <i className=\"fas fa-hamburger\">Calories</i> &emsp;{\" \"}\n                                        {calories}\n                                    </Item.Header>\n                                    <Item.Description>\n                                        <Icon name=\"food\" />\n                                        Ingredients: &emsp; {ingredients}\n                                    </Item.Description>\n                                    <Item.Description>\n                                        <Icon name=\"american sign language interpreting\" />\n                                        Preparation: &emsp;\n                                        {preparation}\n                                    </Item.Description>\n                                    <Item.Extra>\n                                        <Button\n                                            style={{ backgroundColor: \"#fecdc7\" }}\n                                            floated=\"right\"\n                                            onClick={() => deleteRecipe(_id)}\n                                        >\n                                            Remove\n                                        </Button>\n                                    </Item.Extra>\n                                    <Item.Extra>\n                                        <Button\n                                            style={{ backgroundColor: \"#bbdb93\" }}\n                                            onClick={() => {\n                                                history.push(`/${_id}`);\n                                            }}\n                                            floated=\"right\"\n                                        >\n                                            Edit\n                                        </Button>\n                                    </Item.Extra>\n                                </Item.Content>\n                            </Item>\n                            {__history.length > 0 && (\n                                <div style={{ margin: \"80px 0\" }}>\n                                    <ShowHistory historyRecipe={__history} id={_id} />\n                                </div>\n                            )}\n                        </Grid.Column>\n                    )\n                )}\n            </Grid.Row>\n        </Grid>\n    );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useHttp } from \"../hooks/http\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { Preloader } from \"../components/Preloader\";\nimport { RecipeList } from \"../components/RecipeList\";\n\nexport const Recipes = () => {\n    const [recipes, setRecipes] = useState([]);\n    const { loading, request } = useHttp();\n    const { token } = useContext(AuthContext);\n\n    const loadedRecipes = useCallback(async () => {\n        try {\n            const data = await request(\"https://infinite-springs-97858.herokuapp.com/recipe/\", \"GET\", null, {\n                Authorization: `Bearer ${token}`\n            });\n\n            setRecipes(data);\n        } catch (e) {}\n    }, [token, request]);\n\n    useEffect(() => {\n        loadedRecipes();\n    }, [loadedRecipes]);\n\n    if (loading) {\n        return <Preloader />;\n    }\n\n    return <>{!loading && <RecipeList recipes={recipes} />}</>;\n};\n","import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, TextArea, Button } from \"semantic-ui-react\";\nimport { useHttp } from \"../hooks/http\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const CreateRecipe = () => {\n    const history = useHistory();\n    const auth = useContext(AuthContext);\n    const { request } = useHttp();\n    const [formData, setFormData] = useState({\n        title: \"\",\n        calories: \"\",\n        ingredients: \"\",\n        preparation: \"\"\n    });\n\n    const handlerChange = event => {\n        setFormData({ ...formData, [event.target.name]: event.target.value });\n    };\n\n    const handleConfirm = async () => {\n        try {\n            const data = await request(\n                \"https://infinite-springs-97858.herokuapp.com/recipe/add\",\n                \"POST\",\n                { ...formData },\n                {\n                    Authorization: `Bearer ${auth.token}`\n                }\n            );\n            history.push(\"/recipes\");\n        } catch (e) {}\n    };\n\n    return (\n        <Form className=\"container\">\n            <Form.Group widths=\"equal\">\n                <Form.Field\n                    id=\"form-input-control-first-name\"\n                    control={Input}\n                    label=\"Title\"\n                    placeholder=\"Title\"\n                    name=\"title\"\n                    onChange={handlerChange}\n                />\n                <Form.Field\n                    id=\"form-input-control-last-name\"\n                    control={Input}\n                    label=\"Calories\"\n                    placeholder=\"calories\"\n                    type=\"number\"\n                    name=\"calories\"\n                    onChange={handlerChange}\n                />\n            </Form.Group>\n            <Form.Field\n                id=\"form-textarea-control-ingredients\"\n                control={TextArea}\n                label=\"Ingredients\"\n                placeholder=\"ingredients\"\n                name=\"ingredients\"\n                onChange={handlerChange}\n            />\n            <Form.Field\n                id=\"form-textarea-control-preparation\"\n                control={TextArea}\n                label=\"Preparation\"\n                placeholder=\"preparation\"\n                name=\"preparation\"\n                onChange={handlerChange}\n            />\n\n            <Form.Field\n                id=\"form-button-control-public\"\n                control={Button}\n                content=\"Confirm\"\n                label=\"Label with htmlFor\"\n                onClick={handleConfirm}\n            />\n        </Form>\n    );\n};\n","import React, { useContext, useState, useEffect, useCallback } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Form, Input, TextArea, Button } from \"semantic-ui-react\";\nimport { useHttp } from \"../hooks/http\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const OneRecipe = () => {\n    const history = useHistory();\n    const { id } = useParams();\n    const { token } = useContext(AuthContext);\n    const { request } = useHttp();\n    const [formData, setFormData] = useState({\n        title: \"\",\n        calories: \"\",\n        ingredients: \"\",\n        preparation: \"\"\n    });\n\n    const fetchForUpdate = useCallback(async () => {\n        try {\n            const data = await request(\n                `https://infinite-springs-97858.herokuapp.com/recipe/${id}`,\n                \"GET\",\n                null,\n                {\n                    Authorization: `Bearer ${token}`\n                }\n            );\n\n            const { title, calories, ingredients, preparation } = data;\n\n            setFormData({\n                title: title,\n                calories: calories,\n                ingredients: ingredients,\n                preparation: preparation\n            });\n        } catch (e) {}\n    }, [token, request, id]);\n\n    useEffect(() => {\n        fetchForUpdate();\n    }, [fetchForUpdate]);\n\n    const handlerChange = event => {\n        setFormData({ ...formData, [event.target.name]: event.target.value });\n    };\n\n\n    const handleConfirm = async () => {\n        try {\n            const data = await request(\n                `https://infinite-springs-97858.herokuapp.com/recipe/update${id}`,\n                \"POST\",\n                { ...formData },\n                {\n                    Authorization: `Bearer ${token}`\n                }\n            );\n            history.push(\"/recipes\");\n\n        } catch (e) {}\n    };\n\n    return (\n        <Form className=\"container\">\n            <Form.Group widths=\"equal\">\n                <Form.Field\n                    id=\"form-input-control-first-name\"\n                    control={Input}\n                    label=\"Title\"\n                    placeholder=\"Title\"\n                    name=\"title\"\n                    value={formData.title}\n                    onChange={handlerChange}\n                />\n                <Form.Field\n                    id=\"form-input-control-last-name\"\n                    control={Input}\n                    label=\"Calories\"\n                    placeholder=\"calories\"\n                    type=\"number\"\n                    name=\"calories\"\n                    value={formData.calories}\n                    onChange={handlerChange}\n                />\n            </Form.Group>\n            <Form.Field\n                id=\"form-textarea-control-ingredients\"\n                control={TextArea}\n                label=\"Ingredients\"\n                placeholder=\"ingredients\"\n                name=\"ingredients\"\n                value={formData.ingredients}\n                onChange={handlerChange}\n            />\n            <Form.Field\n                id=\"form-textarea-control-preparation\"\n                control={TextArea}\n                label=\"Preparation\"\n                placeholder=\"preparation\"\n                name=\"preparation\"\n                value={formData.preparation}\n                onChange={handlerChange}\n            />\n\n            <Form.Field\n                id=\"form-button-control-public\"\n                control={Button}\n                content=\"Update\"\n                label=\"Label with htmlFor\"\n                onClick={handleConfirm}\n            />\n        </Form>\n    );\n};\n","import React, { useState, useContext } from \"react\";\nimport {\n    Button,\n    Form,\n    Grid,\n    Header,\n    Image,\n    Segment,\n    Message\n} from \"semantic-ui-react\";\nimport { useHttp } from \"../hooks/http\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const Auth = () => {\n    const auth = useContext(AuthContext);\n    const { loading, request, error, clearError } = useHttp();\n\n    const [formData, setFormData] = useState({\n        email: \"\",\n        password: \"\"\n    });\n\n    const [isRegistered, setRegistered] = useState(null);\n\n    const handlerChange = event => {\n        setFormData({ ...formData, [event.target.name]: event.target.value });\n    };\n\n    const handleRegister = async () => {\n        try {\n            const data = await request(\n                \"https://infinite-springs-97858.herokuapp.com/auth/registration\",\n                \"POST\",\n                { ...formData }\n            );\n\n            setRegistered(data.message);\n        } catch (e) {}\n    };\n\n    const handleLogin = async () => {\n        try {\n            const data = await request(\"https://infinite-springs-97858.herokuapp.com/auth/login\", \"POST\", {\n                ...formData\n            });\n\n            auth.login(data.token, data.userId);\n\n        } catch (e) {}\n    };\n\n    console.log(error, \"error\");\n    return (\n        <div>\n            <Grid\n                textAlign=\"center\"\n                style={{ height: \"100vh\" }}\n                verticalAlign=\"middle\"\n            >\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n                        <Image src=\"./img/10250.jpg\" /> Log-in to your account\n                    </Header>\n                    <Form size=\"large\">\n                        <Segment stacked>\n                            <Form.Input\n                                fluid\n                                icon=\"user\"\n                                iconPosition=\"left\"\n                                placeholder=\"E-mail address\"\n                                name=\"email\"\n                                onChange={handlerChange}\n                                onFocus={clearError}\n                                error={\n                                    error && error.includes(\"email\")\n                                        ? {\n                                            content: \"not valid email\",\n                                            pointing: \"left\"\n                                        }\n                                        : null\n                                }\n                            />\n                            <Form.Input\n                                fluid\n                                icon=\"lock\"\n                                iconPosition=\"left\"\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                name=\"password\"\n                                onChange={handlerChange}\n                                onFocus={clearError}\n                                error={\n                                    error && error.includes(\"password\")\n                                        ? {\n                                            content: \"not valid password\",\n                                            pointing: \"left\"\n                                        }\n                                        : null\n                                }\n                            />\n\n                            <Button\n                                color=\"teal\"\n                                fluid\n                                size=\"large\"\n                                style={{ margin: \"5px 0\" }}\n                                disabled={loading || !!error}\n                                onClick={handleLogin}\n                            >\n                                Login\n                            </Button>\n                            <Button\n                                color=\"teal\"\n                                fluid\n                                size=\"large\"\n                                disabled={loading || !!error}\n                                onClick={handleRegister}\n                            >\n                                Register\n                            </Button>\n                        </Segment>\n                    </Form>\n                    {error && (\n                        <Message style={{ background: \"#fff6f6\", color: \"#9f3a38\" }}>\n                            {error}\n                        </Message>\n                    )}\n                    {isRegistered && (\n                        <Message style={{ background: \"#fff\", color: \"#00b5ad\" }}>\n                            {isRegistered}\n                        </Message>\n                    )}\n                </Grid.Column>\n            </Grid>\n        </div>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nexport const Header = () => {\n    const auth = useContext(AuthContext);\n    const history = useHistory();\n\n    const handlerLogOut = e => {\n        e.preventDefault();\n        auth.logout();\n        history.push(\"/\");\n    };\n\n    return (\n        <Menu className=\"container\">\n            <Menu.Item header>\n                <img style={{ width: \"60px\" }} src=\"./img/10250.jpg\" alt=\"\" />\n            </Menu.Item>\n            <Menu.Item>\n                <NavLink to=\"/create\">Create</NavLink>\n            </Menu.Item>\n            <Menu.Item>\n                <NavLink to=\"/recipes\">My recipes</NavLink>\n            </Menu.Item>\n            <Menu.Item position=\"right\">\n                <a href=\"/\" onClick={handlerLogOut}>\n                    {\" \"}\n                    Log out\n                </a>\n            </Menu.Item>\n        </Menu>\n    );\n};\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport { useRoutes } from \"./hooks/routes\";\nimport { useAuthorization } from \"./hooks/authorization\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport { Header } from \"./components/Header\";\nimport { Preloader } from \"./components/Preloader\";\n\nfunction App() {\n    const { login, logout, token, userId, authFinished } = useAuthorization();\n    const isAuthUser = Boolean(token);\n\n    const routes = useRoutes(isAuthUser);\n\n    if (!authFinished) {\n        return <Preloader />;\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{\n                login,\n                logout,\n                token,\n                userId,\n                isAuthUser\n            }}\n        >\n            <HashRouter>\n                {isAuthUser && <Header />}\n                <div className=\"container\">{routes}</div>\n            </HashRouter>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","import { useState, useCallback, useEffect } from \"react\";\n\nconst storageKey = \"userData\";\n\nexport const useAuthorization = () => {\n    const [token, setToken] = useState(null);\n    const [authFinished, setAuthFinished] = useState(false);\n    const [userId, setUserId] = useState(null);\n\n    const login = useCallback((jwt, id) => {\n        setToken(jwt);\n        setUserId(id);\n\n        localStorage.setItem(\n            storageKey,\n            JSON.stringify({\n                userId: id,\n                token: jwt\n            })\n        );\n    }, []);\n\n    const logout = useCallback(() => {\n        setToken(null);\n        setUserId(null);\n        localStorage.removeItem(storageKey);\n    }, []);\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(storageKey));\n\n        if (data && data.token) {\n            login(data.token, data.userId);\n        }\n        setAuthFinished(true);\n    }, [login]);\n\n    return {\n        login,\n        logout,\n        token,\n        userId,\n        authFinished\n    };\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { Recipes } from \"../pages/Recipes\";\nimport { CreateRecipe } from \"../pages/CreateRecipe\";\nimport { OneRecipe } from \"../pages/OneRecipe\";\nimport { Auth } from \"../pages/Auth\";\n\nexport const useRoutes = isAuth => {\n    if (isAuth) {\n        return (\n            <Switch>\n                <Route path=\"/recipes\" exact>\n                    <Recipes />\n                </Route>\n                <Route path=\"/create\" exact>\n                    <CreateRecipe />\n                </Route>\n                <Route path=\"/:id\" exact>\n                    <OneRecipe />\n                </Route>\n                <Redirect to=\"/create\" />\n            </Switch>\n        );\n    }\n\n    return (\n        <Switch>\n            <Route path=\"/\" exact>\n                <Auth />\n            </Route>\n            <Redirect to=\"/\" />\n        </Switch>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}